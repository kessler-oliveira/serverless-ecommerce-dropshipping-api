service: sed-api-auth

plugins:
  - serverless-webpack
  - serverless-offline

package:
  individually: true

custom:
  stage: ${self:provider.stage}
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  stackName: ${self:custom.stage}-${self:service.name}
  environment:
    JWT_SECRET: ${env:JWT_SECRET}
    DB: ${env:DB}
  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-sed-api-gateway-restApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-sed-api-gateway-restApiRootResourceId

functions:
  authorizer:
    handler: Authorizer.handler
  register:
    handler: Register.handler
    events:
      - http:
          path: register
          method: post
          cors: true
  login:
    handler: Login.handler
    events:
      - http:
          path: login
          method: post
          cors: true
  me:
    handler: Me.handler
    events:
      - http:
          path: me
          method: get
          cors: true
          authorizer:
            type: CUSTOM
            authorizerId:
               Ref: Authorizer

resources:
  Resources:
    Authorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: Authorizer
        Type: TOKEN
        AuthorizerResultTtlInSeconds: 0
        IdentitySource: method.request.header.Authorization
        AuthorizerUri: 
          Fn::Join: [ "",
            [
              "arn:aws:apigateway:",
              "${self:provider.region}",
              ":lambda:path/",
              "2015-03-31/functions/",
              Fn::GetAtt: ["AuthorizerLambdaFunction", "Arn" ],
              "/invocations"
            ]]
        RestApiId:
          Fn::ImportValue: ${self:custom.stage}-sed-api-gateway-restApiId
    ApiGatewayLambdaPermissions:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Fn::GetAtt: [ AuthorizerLambdaFunction, Arn]
        Action: lambda:InvokeFunction
        Principal:
          Fn::Join: [ "",
          [
            "apigateway.",
            Ref: AWS::URLSuffix
          ]]

  Outputs:
    Authorizer:
      Value:
        Ref: Authorizer
      Export:
        Name: ${self:custom.stage}-sed-authorizer